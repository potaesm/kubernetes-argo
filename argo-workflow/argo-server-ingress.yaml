apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-argo-server-ingress
  namespace: argo
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true" # "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/backend-protocol: https # http
    # nginx.ingress.kubernetes.io/whitelist-source-range: 203.154.91.246/32,106.192.140.123/16
    nginx.ingress.kubernetes.io/configuration-snippet: |
      if ($http_origin ~* "^https?:\/\/((?:localhost\:4200)|(?:.*\.allowed\.domain))$") {
        set $cors "true";
      }
      if ($request_method = 'OPTIONS') {
        set $cors "${cors}options";
      }
      if ($cors = "true") {
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, PATCH, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
      }
      if ($cors = "trueoptions") {
        add_header 'Access-Control-Allow-Origin' "$http_origin";
        add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, PATCH, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
      }
spec:
  ingressClassName: nginx
  rules:
    - host: argo.cortexshiftdev.team # <ingress-nginx-controller-external-ip>.nip.io # disable attribute for no tls 
      http:
        paths:
          - path: /argo(/|$)(.*)
            pathType: ImplementationSpecific # Prefix
            backend:
              service:
                name: argo-server
                port:
                  number: 2746
  tls:
    - hosts:
        - argo.cortexshiftdev.team
      secretName: tls-cert-secret
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: tls-cert-secret
#   namespace: argo
# data:
#   tls.crt: ""
#   tls.key: ""
# type: kubernetes.io/tls
